#!/usr/bin/env bash
## This is meant to be sourced from most scripts in this repository.
# Includes a strict bash mode/preset w/ a handful of options for nicer console output

set -euo pipefail
trap 's=$?; echo >&2 "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

###################
## FORMATTING:
# color definitions
green=$(tput setaf 2)
red=$(tput setaf 1)
yellow=$(tput setaf 3)
normal=$(tput sgr0)

# status "flags"
OK="${green}[OK]${normal}"
EE="${red}[EE]${normal}"
AA="${yellow}[AA]${normal}"

# colored printing functions
echo_red() {
  printf "${red}%s${normal}\n" "$1"
}
echo_yellow() {
  printf "${yellow}%s${normal}\n" "$1"
}
echo_green() {
  printf "${green}%s${normal}\n" "$1"
}

# filename of currently running script
TOOL_NAME=$(basename "$0")

########
### Various universal functions, mostly for a nice console output:

# Prints an exit status message when called (probably often through trap or in main function)
# Arguments:
#   $1: Exit code (optional, defaults to 0 if not provided)
exit_tool() {
  local exit_code=${1:-0} # Default to 0 if no argument is provided
  if [ "$exit_code" -eq 0 ]; then
    echo_green "Success!"
    exit 0
  else
    echo_red "Failed!"
    exit "$exit_code"
  fi
}

# Prints general status messages with visual indicators.
# Arguments:
#   $1: The message to display.
#   $2: The return code indicator ('ok', 'aa', 'ee'). Defaults to 'ee'.
check() {
  local message=${1:-"null"}
  local return_code=${2:-"ee"} # Default to 'ee' (error) if not specified

  case "$return_code" in
  ee)
    printf "%-65s %s\n" "$message " "$EE"
    echo "Failed task: $TOOL_NAME" >&2 # Output to stderr for errors
    return 1
    ;;
  aa)
    printf "%-65s %s\n" "$message " "$AA"
    return 0 # Indicate success for 'aa'
    ;;
  ok)
    printf "%-65s %s\n" "$message " "$OK"
    return 0 # Indicate success for 'ok'
    ;;
  *)
    printf "%-65s %s\n" "$message " "$EE" # Default to error for unknown codes
    echo "Unknown return code '$return_code' used for message: $message" >&2
    return 1
    ;;
  esac
}
